package in.gov.gem.app.incident.domain.entity;
import in.gov.gem.app.service.core.entity.BaseEntity;
import jakarta.persistence.*;
import lombok.*;
import lombok.experimental.SuperBuilder;
import org.hibernate.annotations.GenericGenerator;

import java.math.BigInteger;
import java.security.Timestamp;
import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;
@Entity
@Table(name = "doc_attachment")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@SuperBuilder
public class IncidentAttachmentEntity extends BaseEntity {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY) // use IDENTITY for Long IDs
    @Column(name = "id", updatable = false, nullable = false)
    private Long id;
    @Column(name = "attachment_id")
    private UUID attachmentId;
    @Column(name = "incident_doc_master_fk",insertable=false, updatable=false, nullable = false)
    private Long incidentDocMasterFk;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "incident_doc_master_fk", insertable = false, updatable = false)
    private IncidentDocMasterEntity incidentDocMaster;
    @Column(name = "file_name")
    private String fileName;
    @Column(name = "file_type_lookup")
    private String fileTypeLookup;
    @Column(name = "file_path")
    private String filePath;
    @Column(name = "file_size")
    private BigInteger fileSize;
   /* @Column(name = "created_by")
    private String createdBy;
    @Column(name = "created_at")
    private LocalDateTime createdAt;
    @Column(name = "updated_by")
    private String updatedBy; // fixed naming
    @Column(name = "updated_at")
    private LocalDateTime updatedAt;
    @Column(name = "is_deleted")
    private Boolean isDeleted;
    @Column(name = "channel_id")
    private String channelId;
    @Column(name = "created_by_app_version")
    private String createdByAppVersion;
    @Column(name = "updated_by_app_version")
    private String updatedByAppVersion;*/
}
