package in.gov.gem.app.incident.domain.entity;
import in.gov.gem.app.service.core.entity.BaseEntity;
import jakarta.persistence.*;
import lombok.*;
import lombok.experimental.SuperBuilder;
import org.hibernate.annotations.GenericGenerator;

import java.security.Timestamp;
import java.time.Instant;
import java.time.LocalDateTime;
import java.util.UUID;
@Entity
@Table(name = "incident_status_log")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@SuperBuilder
public class IncidentStatusLogEntity extends BaseEntity {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Numeric ID
    @Column(name = "id", updatable = false, nullable = false)
    private Long id;
    @Column(name = "log_id")
    private UUID logId;
    @Column(name = "incident_master_fk", nullable = false)
    private Long incidentMasterFk;
    @Column(name = "incident_doc_master_fk")
    private Long incidentDocMasterFk;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "incident_doc_master_fk", insertable = false, updatable = false)
    private IncidentDocMasterEntity incidentDocMaster;
    @Column(name = "action_type_lookup")
    private String actionTypeLookup;
    @Column(name = "previous_status_lookup")
    private String previousStatusLookup;
    @Column(name = "current_status_lookup")
    private String currentStatusLookup;
    @Column(name = "action_by_type_lookup")
    private String actionByTypeLookup;
    @Column(name = "action_by_id")
    private String actionById;
    @Column(name = "remarks")
    private String remarks;
  /*  @Column(name = "created_by")
    private String createdBy;
    @Column(name = "created_at")
    private LocalDateTime createdAt;
    @Column(name = "updated_by")
    private String updatedBy;
    @Column(name = "updated_at")
    private LocalDateTime updatedAt;
    @Column(name = "is_deleted")
    private Boolean isDeleted;
    @Column(name = "channel_id")
    private String channelId;
    @Column(name = "created_by_app_version")
    private String createdByAppVersion;
    @Column(name = "updated_by_app_version")
    private String updatedByAppVersion;*/
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "incident_master_fk", insertable = false, updatable = false)
    private IncidentMasterEntity incidentMaster;
}
