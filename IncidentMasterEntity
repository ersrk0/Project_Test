package in.gov.gem.app.incident.domain.entity;

import in.gov.gem.app.service.core.entity.BaseEntity;
import jakarta.persistence.*;
import lombok.*;
import lombok.experimental.SuperBuilder;
import org.hibernate.annotations.GenericGenerator;

import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;
@Entity
@Table(name = "incident_master")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@SuperBuilder
public class IncidentMasterEntity extends BaseEntity {
    @Id
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(name = "id", updatable = false, nullable = false)
    private Long id;
    @Column(name = "incident_id", unique = true)
    private UUID incidentId;
    @Column(name = "incident_type_lookup")
    private String incidentTypeLookup;
    @Column(name = "module_code")
    private String moduleCode;
    @Column(name = "raised_by_type_lookup")
    private String raisedByTypeLookup;
    @Column(name = "raised_by_id")
    private String raisedById;
    @Column(name = "raised_by_role_lookup")
    private String raisedByRoleLookup;
    @Column(name = "raised_against_type_lookup")
    private String raisedAgainstTypeLookup;
    @Column(name = "raised_against_role_lookup")
    private String raisedAgainstRoleLookup;
    @Column(name = "incident_reason_lookup")
    private String incidentReasonLookup;
    @Column(name = "issue_type_lookup")
    private String issueTypeLookup;
    @Column(name = "incident_title")
    private String incidentTitle;
    @Column(name = "incident_description")
    private String incidentDescription;
    @Column(name = "status_lookup")
    private String statusLookup;
    @Column(name = "severity_lookup")
    private String severityLookup;
    @Column(name = "created_by")
    private String createdBy;
    @Column(name = "created_at")
    private Timestamp createdAt;
    @Column(name = "updated_by")
    private String updateBy;
    @Column(name = "updated_at")
    private Timestamp updatedAt;
    @Column(name = "is_deleted")
    private Boolean isDeleted;
    /*@Column(name = "deleted_at")
    private Timestamp deletedAt;*/
    @Column(name = "channel_id")
    private String channelId;
    @Column(name = "created_by_app_version")
    private String createdByAppVersion;
    @Column(name = "updated_by_app_version")
    private String updatedByAppVersion;
    @OneToMany(mappedBy = "incident_master", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<PreContractIncidentEntity> preContractData;
    @OneToMany(mappedBy = "incident_master", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<PostContractIncidentEntity> postContractData;
    @OneToMany(mappedBy = "incident_master", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<IncidentStatusLogEntity> incidentStatusLogData;
    @OneToMany(mappedBy = "incident_master", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<IncidentDocMasterEntity> incidentDocMasterData;
}
